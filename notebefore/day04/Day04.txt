复习：
1.列表
  有序列表：<ol><li>数据</li></ol>
  无序列表：<ul><li>数据</li></ul>
2.CSS
  1.什么是css?
    css:层叠样式表，简称样式表
  2.css是用来修饰元素，定义HTML元素的样式。
  3.css能够提高代码的可维护性和重用性
  4.css的使用方式
    内联样式：<div style="color:red;"></div>
    内部样式：
      <head>
	<style>
	   p{color:blue;}
	</style>
      </head>
    外部样式：
      1.创建一个独立的css文件
      2.在css文件中编写样式规则
      3.必须在网页中引入外部的css文件
        <link rel="stylesheet" href="css文件的路径">
  5.CSS的样式特征
    1.继承性
      子元素继承父元素的样式。
    2.层叠性
      给元素定义多个样式，并且这些样式不冲突时，就会叠加到一起被元素应用。
    3.优先级
      默认排序：
         浏览器默认设置      低
	 内部样式和外部样式  中（就近原则）
	 内联样式            高
    4.调整显示的优先级
      将!important放在属性值之后，并且与值之间用空格隔开。
      ex:
        color:red !important;
================================================
一.基础选择器
  1.选择器的作用
    将定义好的样式匹配给页面中的元素。
  2.选择器详解
    (1)通用选择器
       作用：匹配页面中的所有元素
       语法：*{样式声明}
       ex:
         *{
	   color:blue;
	  }
       效率较低，尽量少用
    (2)元素选择器
       又称标签选择器，标记选择器。
       作用：定义页面中某一类元素的样式
       语法：由元素名称作为选择器
         ex:div{...}
	    p{...}
	    span{...}
       练习：
         页面中添加两个div元素和一个h3元素，内容随意。
	 用通用选择器设置所有元素的字体颜色为蓝色，然后用元素选择器设置div元素的字体大小为24px。
    (3)类选择器
       特点：一段公共的样式，谁想用谁就可以使用。
       作用：通过元素所附带的class属性值对选择器进行引用
       语法：
          .类名{样式声明}
	  定义类名注意：
	     1.不能以数字开头
	     2.不能包含特殊字符（可以包含_,-）
          引用：<any class="类名"></any>
	  

       多类选择器：
          允许让一个元素引用多个类选择器。
	  ex:
	  <p class="类名1 类名2 类名3 ..."></p>
       分类选择器：
          将元素选择器和类选择器联合使用，从而实现对元素不同样式的细分控制。
	  语法：元素选择器.类选择器{样式声明}
       练习：
          在网页中添加2个h2元素和1个p元素，内容随意，用类选择器设置所有文本颜色为蓝色，然后用分类选择器设置p元素的字体大小为40px。
    (4)id选择器
       作用：使用元素所附带的id属性值进行样式的声明定义
       特点：专属定制
       语法：#id值{样式声明}
       ex:
         <div id="one"></div>
	 #one{
	    color:red;
	 }

    (5)群组选择器
       语法：将多个选择器放在一起定义公共的样式，选择器之间用逗号隔开。
           选择器1，选择器2，选择器3{样式声明}
         ex:div,.myColor,#d1,p.text{color:yellow;}
	    等同于下面的写法：
	    div{color:yellow;}
	    .myColor{color:yellow;}
	    #d1{color:yellow;}
	    p.text{color:yellow;}

       练习：网页中有以下元素，用群组选择器设置他们的字体为红色，背景为黄色。
          <div>ddddddd</div>
	  <span class="myColor">ssssssssss</span>
	  <p class="text">pppppppppp</p>
	  <a id="d1">aaaaaaaa</a>

    (6)后代选择器
       1.作用
         依托于后代关系 匹配页面中的元素。
	 后代：一级以及多余一级的嵌套关系。
       2.语法
         选择器1 选择器2{样式声明}
    (7)子代选择器
       依托于子代 关系匹配页面中的元素。
       子代：只有一级嵌套
       语法：选择器1>选择器2{样式声明}
       练习：按以下布局完成样式的设置
          <div id="content">
	     <ul>
	        <li class="one">
		  <a href="#">不需要做任何样式的修改</a>
		</li>
		<li class="two">
		  <a href="#">设置红色字体，24px</a>
		  <a href="#">设置红色字体，24px</a>
		</li>
	     </ul>
	  </div>
    (8)伪类选择器
       作用：用于匹配元素不同状态的样式。
       语法：选择器:伪类选择器{样式声明}
       分类：
          链接伪类：
	     :link 匹配尚未访问的链接状态
	     :visited 匹配访问过的链接状态
	  动态伪类：
	     :hover 匹配鼠标悬停在元素上时的状态
	     :active 匹配元素被激活时的状态
	     :focus 匹配元素获取焦点时的状态
            ex:  
              div:hover{color:red;}
        练习：
	 仿照列表练习，添加如下功能：
	    1.当鼠标放在链接上时，文字颜色为红色，链接访问之前是黑色字体，访问之后是绿色字体。

	    3.当鼠标放到图片上时，图片变大。

            设置图片的高宽：
	    img{
	      width:200px;//宽度
	      height:200px;//高度
	    }