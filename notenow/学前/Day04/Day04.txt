复习：
1.列表
  将具有相似特征或具有先后顺序的内容按照从上到下（从左往右）来排列。
  语法：
  有序列表：<ol type="A" start="4">
               <li>内容</li>
	       <li>内容</li>
	       ...
	    </ol>
  无序列表：<ul type="none">
               <li>内容</li>
	       ...
	    </ul>
  列表的嵌套：
         <ul>
	    <li>
	      内容
	      <ol>
	        <li>内容</li>
	      </ol>
	    </li>
	 </ul>
2.CSS
  CSS：简称样式表
  作用：修饰元素。
  使用方式：
    1.内联样式
      <any style="color:red;font-size:20px;"></any>
      <div id="one" title="这是一个元素">
    2.内部样式
      在<head></head>标记中添加一对<style></style>,然后在style标记中添加样式规则
      语法：
         <head>
	    <style>
	      选择器{
	         color:red;
                 font-size:30px;
	      }
	    </style>
	 </head>
    3.外部样式
      使用步骤：
        1.创建一个独立的样式文件(.css为后缀的文件)
	2.在css文件中编写样式规则
	3.在网页的头元素中引入样式文件
	  <head>
	     <link rel="stylesheet" href="css文件的url">
	  </head>
  CSS样式的特征：
     1.继承性
       大部分的CSS样式可以被继承（子继承父）
     2.层叠性
       多个样式声明不冲突时会叠加到一起被元素应用。
     3.优先级
       默认顺序：
          内联样式            高
	  内部样式与外部样式  中（就近原则）
	  浏览器的默认设置    低
     4.调整显示的优先级
       !important 放在属性值之后，与值之间用空格隔开。
       ex:
         div{
	   color:red !important;
	 }
===================================
今日目标：
  1.基础选择器
  2.尺寸和边框
  3.背景

一.基础选择器
  1.选择器的作用
    将定义好的样式匹配给页面中的元素。
  2.详解
    (1)通用选择器
       作用：修饰页面中的任意元素。
       语法：*{样式声明}
       ex:
         *{
	    color:blue;
	 }
       效率较低，尽量少用
    (2)元素选择器
       作用：定义页面中某一种（类）元素的样式。
       用元素的名称作为选择器。
       语法：元素名称{样式声明}
       ex:  div{...}
            p{....}
	    a{...}
	    img{....}
    (3)类选择器
       作用：定义一个或一些元素的样式。
       特点：是一段公共的样式，谁想用谁就可以使用。
       语法：
         1.定义选择器
	   .类名称{样式声明}
	   定义类名称时注意：不能以数字开头，不能包含特殊字符(可以包含-,_)
	   ex:
	     .myColor{
	       color:yellow;
	     }
	 2.使用选择器
	   用元素的class属性来引用类选择器。
	   <any class="类名称"></any>
	   ex:<div class="myColor"></div>
	     
       多类选择器：
          允许在一个class中引入多个类名称。
	  <any class="类名1 类名2..."></any>
       分类选择器：
          将元素选择器和类选择器联合使用，从而实现对元素不同样式的细分控制。
	  语法：元素名称.类选择器{样式声明}
	  ex：div.myColor{color:red;}
       练习：
          页面中添加两个p元素和一个div元素，内容随意，用类选择器设置所有元素的字体样色为蓝色，再用分类选择器设置p元素字体大小为36px.
    (4)ID选择器
       作用：定义当前id值所对应元素的样式（专属定制）
       语法：#id值{样式声明}
       ex:#map{color:red;}
         <div id="map"></div> 修饰当前这个元素
	 <div id="first"></div>
    
    (5)群组选择器
       作用：定义一组选择器的公共样式
       语法：多个选择器之间用逗号隔开
            选择器1,选择器2,选择器,...{样式声明}
       ex:
         #map{color:red;}
	 div{color:red;}
	 .myColor{color:red;}
	 p.text{color:red;}
         简化：
	 #map,div,.myColor,p.text{color:red;}

    (6)后代选择器
       作用：匹配一级或多级嵌套的元素，定义后代元素的样式。
       语法：选择器1 选择器2 选择器3{样式声明}
    (7)伪类选择器
       作用：用于匹配元素不同状态的样式
       语法：选择器:伪类选择器{样式声明}
       伪类选择器分为：
          1.链接伪类
	    :link 匹配链接访问之前的状态
	    :visited 匹配链接访问之后的状态
	  2.动态伪类
	    :hover 鼠标悬停在元素上时的状态
	    :active 鼠标激活时的状态
	    :focus  获取焦点时的状态
二.尺寸和边框
  1.尺寸单位
    %：百分比
    px：像素
    pt：磅（表示字体大小）1/72in
    in：英寸（1in=2.54cm）
    em:相对单位,乘以倍数(2em)
    rem:相对单位,乘以倍数(2rem)
  2.颜色取值（单位）
    1.英文单词
      red,blue,yellow,gray,green,purple,orange....
    2.rgb
      r:red
      g:green
      b:blue
      取值：0-255
      rgb(255,255,0)
    3.#rrggbb
      取值：由0-9数字和a-f字母组成
      #ffffff:白色
      #000000:黑色
      #eeeeee:灰色
    4.#rgb上面的缩写形式
      #fff:白色
      #11ffaa--->#1fa
  3.尺寸属性
    用于设置元素的宽度和高度。
    默认尺寸：
        块级元素：
	    宽度占父元素的100%
	    高度自适应
        行内元素：
	    宽度自适应
	    高度自适应
    修改尺寸的属性：
        宽度：width  取值：以px或%为单位的数字
	高度：height 取值：以px或%为单位的数字
    哪些元素允许修改尺寸？
        1.块级元素可以修改尺寸
	2.行内元素不允许修改尺寸的
	3.本身具备width和height属性的元素允许修改：img,table
  4.边框
    就是围绕在元素外的线条。
    1.简写方式
      属性：
          border:width style color;
	  width:边框的宽度（粗细）
	  style:边框的样式  取值：solid 实线
	                          dotted 虚线
				  dashed 虚线
          color:边框的颜色
    2.单边设置
      只设置其中的某一条边框。
      border-方向：width style color;
      方向：top/bottom/left/right
      ex:
        border-bottom:2px solid red;
      练习：在上面练习的基础上，设置上边框为3px，红色 实线条，下边框为8px 蓝色 虚线。
  5.边框倒角
    倒角：将元素的直角倒成圆角。
    属性：border-radius
    取值：
       1.以px为单位的数字
       2.百分比 设置圆形（>=50%）

  课后练习：
     页面中添加一个列表，添加三个子项，页面一加载时效果如图所示。当鼠标悬停在li上时，边框变为红色，并且直角变为圆角（8px的圆角）。
